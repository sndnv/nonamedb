buildscript {
    ext.kotlin_version = '1.2.41'
    ext.kotlinx_coroutines_version = '0.22.5'
    ext.spring_boot_version = '2.0.2.RELEASE'
    ext.reactor_version = "3.1.4.RELEASE"
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:$kotlinx_coroutines_version"
    compile "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$kotlinx_coroutines_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'io.github.microutils:kotlin-logging:1.5.4'
    compile "io.projectreactor:reactor-core:$reactor_version"
    compile "org.springframework.boot:spring-boot-starter-actuator:$spring_boot_version"
    compile "org.springframework.boot:spring-boot-starter-webflux:$spring_boot_version"

    testCompile "org.springframework.boot:spring-boot-starter-test:$spring_boot_version"
    testCompile "io.projectreactor:reactor-test:$reactor_version"
    testCompile 'io.kotlintest:kotlintest-runner-junit5:3.1.6'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.2.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.2.0'
}

task kotlintest(type: Test) {
    useJUnitPlatform()
}

test.dependsOn kotlintest

task wrapper(type: Wrapper) {
    gradleVersion = "4.7"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}
